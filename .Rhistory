colors = ifelse(monetary1$`GDP Quarterly Growth` < 0, "#E31737", "#333F50")
)
) %>%
hc_add_series(
name = "Bank of Canada Policy Interest Rate",
data = monetary1$`Bank of Canada Policy Interest Rate`,
type = "line",
yAxis = 1
) %>%
hc_caption(
text = "Statistics Canada, Table 36-10-0434-01; Gross domestic product (GDP) at basic prices, by industry, monthly (x 1,000,000), Bank of Canada, target for the overnight rate"
) %>%
hc_add_theme(hc_theme_bloom()) %>%
hc_tooltip(
useHTML = TRUE,
formatter = JS("function () {
var pointIndex = this.point.index;
var gdpGrowth = this.series.chart.series[0].data[pointIndex].y;
var policyRate = this.series.chart.series[1].data[pointIndex].y;
return '<b>' + this.x + '</b><br>' +
'GDP Quarterly Growth: ' + Highcharts.numberFormat(gdpGrowth, 2) + '<br>' +
'Policy Interest Rate: ' + Highcharts.numberFormat(policyRate, 2) + '%';
}")
)
plot(monetary3)
library(OECD)
library(rmarkdown)
library(tidyverse)
library(forecast)
library(xts)
library(rmarkdown)
library(openxlsx)
library(XML)
library(reshape2)
library(plyr)
library(ggplot2)
library(rCharts)
library(dplyr)
library(tidyr)
library(plotly)
library(ggcharts)
library(ggpol)
library(RColorBrewer)
library(highcharter)
library(vtable)
library(htmlwidgets)
library(webshot)
library(scales)
library(statcanR)
library(tidyverse)
library(writexl)
library(highcharter)  # Make sure you have the highcharter library installed
library(readxl)
options(htmltools.dir.version = FALSE, htmltools.preserve.raw = FALSE)
# Data similar to the one in the image uploaded
data <- data.frame(
categories = c("Monthly GDP", "Inflation", "Interest Rate", "Unemployment",
"Business Confidence Index", "Consumer Confidence Index",
"Exports Growth", "Business Investment", "Business Insolvencies"),
values = c(0.1, -3.1, -5, 5.8, -3.4, 3.7, 2.2, 2.4, 3.5), # Mock values
periods = c("Sept.", "Oct.", "Nov.", "Nov.", "Nov.", "Nov.", "Oct.", "Q2 2023", "Q3 2023"),
colors = c("#FF0000", "#FF0000", "#FF0000", "#FF0000",  # Red for first 4
"#7a9e9f", "#7a9e9f",                        # Teal for next 2
"#FFD700", "#FFD700", "#FFD700")             # Yellow for last 3
)
# Parse the data for highcharter
data_list <- lapply(1:nrow(data), function(i) {
list(
name = data$categories[i],
y = data$values[i],
color = data$colors[i]
)
})
# Create the highchart object with customized colors
test<-highchart() %>%
hc_chart(type = 'column') %>%
#hc_title(text = "Economic Dashboard") %>%
#hc_subtitle(text = "Growth comes to a halt as higher rates start to impact businesses and labor") %>%
hc_xAxis(categories = data$categories) %>%
hc_yAxis(title = list(text = "Monthly Percentage Change")) %>%
hc_add_series(name = "Economic Indicators", data = data_list, dataLabels = list(enabled = TRUE)) %>%
hc_tooltip(formatter = JS("function() { return this.x + ': <b>' + this.y + '%</b> '; }")) %>%
hc_plotOptions(series = list(
dataLabels = list(enabled = TRUE, format = '{y:.1f}%')
))
test
monetary <- read_excel("C:/Users/davreuxa/Documents/soe/monetary.xlsx")
monetary1<- monetary %>%
pivot_longer(-indicator, names_to = "Quarter", values_to = "Value")%>%
pivot_wider(names_from = `indicator`, values_from = `Value`)
monetary1
monetary3 <- highchart() %>%
hc_chart(type = "column", zoomType = "xy") %>%
hc_title(text = "GDP growth, monthly (left, %), Bank of Canada policy interest rate (right, %) ") %>%
hc_xAxis(categories = monetary1$Quarter) %>%
hc_yAxis_multiples(
list(
title = list(text = "GDP Quarterly Growth"),
opposite = FALSE
),
list(
title = list(text = "Bank of Canada Policy Interest Rate"),
opposite = TRUE
)
) %>%
hc_add_series(
name = "GDP quarterly growth",
data = monetary1$`GDP Quarterly Growth`,
type = "column",
yAxis = 0
) %>%
hc_plotOptions(
column = list(
colorByPoint = TRUE,
colors = ifelse(monetary1$`GDP Quarterly Growth` < 0, "#E31737", "#333F50")
)
) %>%
hc_add_series(
name = "Bank of Canada Policy Interest Rate",
data = monetary1$`Bank of Canada Policy Interest Rate`,
type = "line",
yAxis = 1
) %>%
hc_caption(
text = "Statistics Canada, Table 36-10-0434-01; Gross domestic product (GDP) at basic prices, by industry, monthly (x 1,000,000), Bank of Canada, target for the overnight rate"
) %>%
hc_add_theme(hc_theme_bloom()) %>%
hc_tooltip(
useHTML = TRUE,
formatter = JS("function () {
var pointIndex = this.point.index;
var gdpGrowth = this.series.chart.series[0].data[pointIndex].y;
var policyRate = this.series.chart.series[1].data[pointIndex].y;
return '<b>' + this.x + '</b><br>' +
'GDP Quarterly Growth: ' + Highcharts.numberFormat(gdpGrowth, 2) + '<br>' +
'Policy Interest Rate: ' + Highcharts.numberFormat(policyRate, 2) + '%';
}")
)
plot(monetary3)
library(OECD)
library(rmarkdown)
library(tidyverse)
library(forecast)
library(xts)
library(rmarkdown)
library(openxlsx)
library(XML)
library(reshape2)
library(plyr)
library(ggplot2)
library(rCharts)
library(dplyr)
library(tidyr)
library(plotly)
library(ggcharts)
library(ggpol)
library(RColorBrewer)
library(highcharter)
library(vtable)
library(htmlwidgets)
library(webshot)
library(scales)
library(statcanR)
library(tidyverse)
library(writexl)
library(highcharter)  # Make sure you have the highcharter library installed
library(readxl)
options(htmltools.dir.version = FALSE, htmltools.preserve.raw = FALSE)
# Data similar to the one in the image uploaded
data <- data.frame(
categories = c("Monthly GDP", "Inflation", "Interest Rate", "Unemployment",
"Business Confidence Index", "Consumer Confidence Index",
"Exports Growth", "Business Investment", "Business Insolvencies"),
values = c(0.1, -3.1, -5, 5.8, -3.4, 3.7, 2.2, 2.4, 3.5), # Mock values
periods = c("Sept.", "Oct.", "Nov.", "Nov.", "Nov.", "Nov.", "Oct.", "Q2 2023", "Q3 2023"),
colors = c("#FF0000", "#FF0000", "#FF0000", "#FF0000",  # Red for first 4
"#7a9e9f", "#7a9e9f",                        # Teal for next 2
"#FFD700", "#FFD700", "#FFD700")             # Yellow for last 3
)
# Parse the data for highcharter
data_list <- lapply(1:nrow(data), function(i) {
list(
name = data$categories[i],
y = data$values[i],
color = data$colors[i]
)
})
# Create the highchart object with customized colors
test<-highchart() %>%
hc_chart(type = 'column') %>%
#hc_title(text = "Economic Dashboard") %>%
#hc_subtitle(text = "Growth comes to a halt as higher rates start to impact businesses and labor") %>%
hc_xAxis(categories = data$categories) %>%
hc_yAxis(title = list(text = "Monthly Percentage Change")) %>%
hc_add_series(name = "Economic Indicators", data = data_list, dataLabels = list(enabled = TRUE)) %>%
hc_tooltip(formatter = JS("function() { return this.x + ': <b>' + this.y + '%</b> '; }")) %>%
hc_plotOptions(series = list(
dataLabels = list(enabled = TRUE, format = '{y:.1f}%')
))
test
monetary <- read_excel("C:/Users/davreuxa/Documents/soe/monetary.xlsx")
monetary1<- monetary %>%
pivot_longer(-indicator, names_to = "Quarter", values_to = "Value")%>%
pivot_wider(names_from = `indicator`, values_from = `Value`)
monetary1
monetary3 <- highchart() %>%
hc_chart(type = "column", zoomType = "xy") %>%
hc_title(text = "GDP growth, monthly (left, %), Bank of Canada policy interest rate (right, %) ") %>%
hc_xAxis(categories = monetary1$Quarter) %>%
hc_yAxis_multiples(
list(
title = list(text = "GDP Quarterly Growth"),
opposite = FALSE
),
list(
title = list(text = "Bank of Canada Policy Interest Rate"),
opposite = TRUE
)
) %>%
hc_add_series(
name = "GDP quarterly growth",
data = monetary1$`GDP Quarterly Growth`,
type = "column",
yAxis = 0
) %>%
hc_plotOptions(
column = list(
colorByPoint = TRUE,
colors = ifelse(monetary1$`GDP Quarterly Growth` < 0, "#E31737", "#333F50")
)
) %>%
hc_add_series(
name = "Bank of Canada Policy Interest Rate",
data = monetary1$`Bank of Canada Policy Interest Rate`,
type = "line",
yAxis = 1
) %>%
hc_caption(
text = "Statistics Canada, Table 36-10-0434-01; Gross domestic product (GDP) at basic prices, by industry, monthly (x 1,000,000), Bank of Canada, target for the overnight rate"
) %>%
hc_add_theme(hc_theme_bloom()) %>%
hc_tooltip(
useHTML = TRUE,
formatter = JS("function () {
var pointIndex = this.point.index;
var gdpGrowth = this.series.chart.series[0].data[pointIndex].y;
var policyRate = this.series.chart.series[1].data[pointIndex].y;
return '<b>' + this.x + '</b><br>' +
'GDP Quarterly Growth: ' + Highcharts.numberFormat(gdpGrowth, 2) + '<br>' +
'Policy Interest Rate: ' + Highcharts.numberFormat(policyRate, 2) + '%';
}")
)
plot(monetary3)
remotes::install_github('yihui/xaringan')
library(OECD)
library(rmarkdown)
library(tidyverse)
library(forecast)
library(xts)
library(rmarkdown)
library(openxlsx)
library(XML)
library(reshape2)
library(plyr)
library(ggplot2)
library(rCharts)
library(dplyr)
library(tidyr)
library(plotly)
library(ggcharts)
library(ggpol)
library(RColorBrewer)
library(highcharter)
library(vtable)
library(htmlwidgets)
library(webshot)
library(scales)
library(statcanR)
library(tidyverse)
library(writexl)
library(highcharter)  # Make sure you have the highcharter library installed
library(readxl)
options(htmltools.dir.version = FALSE, htmltools.preserve.raw = FALSE)
# Data similar to the one in the image uploaded
data <- data.frame(
categories = c("Monthly GDP", "Inflation", "Interest Rate", "Unemployment",
"Business Confidence Index", "Consumer Confidence Index",
"Exports Growth", "Business Investment", "Business Insolvencies"),
values = c(0.1, -3.1, -5, 5.8, -3.4, 3.7, 2.2, 2.4, 3.5), # Mock values
periods = c("Sept.", "Oct.", "Nov.", "Nov.", "Nov.", "Nov.", "Oct.", "Q2 2023", "Q3 2023"),
colors = c("#FF0000", "#FF0000", "#FF0000", "#FF0000",  # Red for first 4
"#7a9e9f", "#7a9e9f",                        # Teal for next 2
"#FFD700", "#FFD700", "#FFD700")             # Yellow for last 3
)
# Parse the data for highcharter
data_list <- lapply(1:nrow(data), function(i) {
list(
name = data$categories[i],
y = data$values[i],
color = data$colors[i]
)
})
# Create the highchart object with customized colors
test<-highchart() %>%
hc_chart(type = 'column') %>%
#hc_title(text = "Economic Dashboard") %>%
#hc_subtitle(text = "Growth comes to a halt as higher rates start to impact businesses and labor") %>%
hc_xAxis(categories = data$categories) %>%
hc_yAxis(title = list(text = "Monthly Percentage Change")) %>%
hc_add_series(name = "Economic Indicators", data = data_list, dataLabels = list(enabled = TRUE)) %>%
hc_tooltip(formatter = JS("function() { return this.x + ': <b>' + this.y + '%</b> '; }")) %>%
hc_plotOptions(series = list(
dataLabels = list(enabled = TRUE, format = '{y:.1f}%')
))
test
monetary <- read_excel("C:/Users/davreuxa/Documents/soe/monetary.xlsx")
monetary1<- monetary %>%
pivot_longer(-indicator, names_to = "Quarter", values_to = "Value")%>%
pivot_wider(names_from = `indicator`, values_from = `Value`)
monetary1
monetary3 <- highchart() %>%
hc_chart(type = "column", zoomType = "xy") %>%
hc_title(text = "GDP growth, monthly (left, %), Bank of Canada policy interest rate (right, %) ") %>%
hc_xAxis(categories = monetary1$Quarter) %>%
hc_yAxis_multiples(
list(
title = list(text = "GDP Quarterly Growth"),
opposite = FALSE
),
list(
title = list(text = "Bank of Canada Policy Interest Rate"),
opposite = TRUE
)
) %>%
hc_add_series(
name = "GDP quarterly growth",
data = monetary1$`GDP Quarterly Growth`,
type = "column",
yAxis = 0
) %>%
hc_plotOptions(
column = list(
colorByPoint = TRUE,
colors = ifelse(monetary1$`GDP Quarterly Growth` < 0, "#E31737", "#333F50")
)
) %>%
hc_add_series(
name = "Bank of Canada Policy Interest Rate",
data = monetary1$`Bank of Canada Policy Interest Rate`,
type = "line",
yAxis = 1
) %>%
hc_caption(
text = "Statistics Canada, Table 36-10-0434-01; Gross domestic product (GDP) at basic prices, by industry, monthly (x 1,000,000), Bank of Canada, target for the overnight rate"
) %>%
hc_add_theme(hc_theme_bloom()) %>%
hc_tooltip(
useHTML = TRUE,
formatter = JS("function () {
var pointIndex = this.point.index;
var gdpGrowth = this.series.chart.series[0].data[pointIndex].y;
var policyRate = this.series.chart.series[1].data[pointIndex].y;
return '<b>' + this.x + '</b><br>' +
'GDP Quarterly Growth: ' + Highcharts.numberFormat(gdpGrowth, 2) + '<br>' +
'Policy Interest Rate: ' + Highcharts.numberFormat(policyRate, 2) + '%';
}")
)
monetary3
proj<-highchart() %>%
hc_chart(type = "line") %>%
hc_title(text = "Real GDP growth, past and projected, for selected countries and the world, yearly, percentage ") %>%
hc_xAxis(categories = c(2022, 2023, 2024, 2025),
plotBands = list(
list(
from = 0.5,  # Assuming the categories are zero-indexed
to = 3.5,    # 2024 to 2025
color = "rgba(204, 204, 204, 0.5)"  # Light gray background
)
)) %>%
hc_yAxis(title = list(text = "GDP Growth (%)")) %>%
hc_add_series(name = "Canada, previous projection", data = c(3.4, 1.8, 1.2, 2.4)) %>%
hc_add_series(name = "Canada, current projection", data = c(3.4, 1.2, 0.9, 2.5)) %>%
hc_add_series(name = "World, current projection", data = c(3.4, 2.9, 2.3, 2.6)) %>%
hc_add_series(name = "World, previous projection", data = c(3.4, 2.8, 2.4, 2.7)) %>%
hc_legend(enabled = TRUE) %>%
hc_plotOptions(series = list(marker = list(enabled = TRUE))) %>%
hc_tooltip(shared = TRUE, crosshairs = TRUE)%>%
hc_colors(colors = c('#FFBBAB', '#FF0000', 'black', 'grey')) %>%
hc_add_theme(hc_theme_bloom())
proj
cons <- read_excel("C:/Users/davreuxa/Documents/soe/construction.xlsx")
const <- highchart() %>%
hc_chart(type = "column", zoomType = "xy") %>%
hc_xAxis(categories = cons$Quarter) %>%
hc_add_series(
name = "Change in the cost of labor",
data = cons$`Change in the cost of labor`,
dataLabels = list(enabled = TRUE, format = '{point.y:.2f}%')
) %>%
hc_add_series(
name = "Change in the price of goods sold",
data = cons$`Change in the price of goods sold`,
dataLabels = list(enabled = TRUE, format = '{point.y:.2f}%')
) %>%
hc_yAxis(
title = list(text = "%")
) %>%
hc_caption(
text = "Source: StatsCan Table 36-10-0104-01"
) %>%
hc_add_theme(hc_theme_bloom()) %>%
hc_tooltip(
pointFormat = '{series.name}: <b>{point.y:.2f}%</b><br/>',
shared = TRUE
)%>%
hc_title(text = "Quarterly change in the unit labor cost, and the implicit price deflator, percentage")%>%
hc_colors(colors = c( "#7a9e9f","#b8d8d8"))
const
debt <- read_excel("C:/Users/davreuxa/Documents/soe/debt.xlsx")
debt1 <- highchart() %>%
hc_chart(type = "bar", zoomType = "xy") %>%
hc_xAxis(categories = debt$`Industry`) %>%
hc_add_series(
name = "Jan-Aug2023",
data = debt$`Jan-Aug 2023`
) %>%
hc_add_series(
name = "Jan-Aug2019",
data = debt$`Jan-Aug 2019`
) %>%
hc_yAxis(
title = list(text = "%")
) %>%
hc_caption(
text = "Source: StatsCan Table 36-10-0104-01"
) %>%
hc_add_theme(hc_theme_bloom()) %>%
hc_tooltip(
pointFormat = '{series.name}: <b>{point.y:.2f}%</b><br/>',
shared = TRUE
)%>%
hc_title(text = "Quarterly change in the unit labor cost, and the implicit price deflator, percentage")%>%
hc_colors(colors = c( "#7a9e9f","#b8d8d8"))
debt1
# Create a data frame with the GDP growth information
gdp_growth <- data.frame(
Industry = c(
"Professional services", "Public administration", "Finance and insurance",
"Health care and social assistance", "Educational services", "Real estate and rental and leasing",
"Retail trade", "Information and cultural industries", "Other services", "Wholesale trade",
"Energy and mining", "Manufacturing", "Construction", "Transportation and warehousing",
"Utilities", "Administrative and support", "Accommodation and food services",
"Agriculture, forestry, fishing and hunting", "Arts, entertainment and recreation"
),
RelativeToPrePandemic = c(
11.6, 9.1, 8.7, 8.6, 6.7, 5.8, 3.4, 3.4, 3.2, 2.3, 1.3, 0.2, -0.2, -2.4,
-4.1, -5.3, -7.0, -8.9, -7.3
),
PastYear = c(
1.8, 3.6, 1.2, 2.9, 2.7, 2.2, -0.8, -0.9, 1.3, 1.7, 0.9, -0.2, -0.7, 4.5,
-6.4, 0.1, 0.0, -15.7, 7.4
),
PastThreeMonths = c(
-0.2, 0.9, 0.7, 0.6, 0.3, 0.4, -1.3, -1.8, -0.1, 0.8, 3.2, -2.0, -0.7, 0.1,
-2.2, -0.6, -1.0, 1.0, -7.5
)
)
# Create the Highchart
sect<-highchart() %>%
hc_chart(type = "bar") %>%
hc_title(text = "Sector Snapshot") %>%
hc_subtitle(text = "Tourism and Transportation have yet to recover from the Pandemic while Construction and Agriculture dip back below their pre-pandemic levels") %>%
hc_xAxis(categories = gdp_growth$Industry) %>%
hc_yAxis(title = list(text = "GDP growth (%)")) %>%
hc_add_series(name = "Relative to pre-pandemic", data = gdp_growth$RelativeToPrePandemic) %>%
hc_add_series(name = "Past year", data = gdp_growth$PastYear) %>%
hc_add_series(name = "Past three months", data = gdp_growth$PastThreeMonths) %>%
hc_legend(enabled = TRUE) %>%
hc_plotOptions(series = list(stacking = "normal")) %>%
hc_tooltip(pointFormat = "<span style='color:{point.color}'>\u25CF</span> {series.name}: <b>{point.y}%</b><br/>")
sect
industries <- c("Professional services", "Public administration", "Finance and insurance",
"Health care and social assistance", "Educational services",
"Real estate and rental and leasing", "Retail trade",
"Information and cultural industries", "Other services", "Wholesale trade",
"Energy and mining", "Manufacturing", "Construction",
"Transportation and warehousing", "Utilities", "Administrative and support",
"Accommodation and food services", "Agriculture, forestry, fishing and hunting",
"Arts, entertainment and recreation")
pre_pandemic <- c(11.6, 9.1, 8.7, 8.6, 6.7, 5.8, 3.4, 3.4, 3.2, 2.3, 1.3, 0.2, -1.2, -2.4, -4.1, -5.3, -7.0, -7.3, -8.9)
past_year <- c(1.8, 3.6, 1.2, 2.9, 2.7, 2.2, -0.8, -0.9, 1.3, 1.7, 0.9, -0.2, -1.7, 4.5, -6.4, 0.1, 0.0, -15.7, 7.4)
past_three_months <- c(-0.2, 0.9, 0.7, 0.6, 0.3, 0.4, -1.3, -1.8, -0.1, 0.8, 3.2, -2.0, -0.7, 0.1, -2.2, -0.6, -1.0, 1.0, -7.5)
# Create a list of lists for highcharter
data_for_chart <- list(
list(name = 'Relative to pre-pandemic', data = pre_pandemic),
list(name = 'Past year', data = past_year),
list(name = 'Past three months', data = past_three_months)
)
# Create the Highchart
sect2<-highchart() %>%
hc_chart(type = 'bar') %>%
hc_title(text = "GDP growth by industry, as of August 2023, percentage") %>%
hc_xAxis(categories = industries) %>%
hc_yAxis(title = list(text = "Growth (%)")) %>%
hc_add_series_list(data_for_chart) %>%
hc_plotOptions(series = list(stacking = 'normal')) %>%
hc_legend(reversed = TRUE) %>%
hc_add_theme(hc_theme_bloom()) %>%
hc_tooltip(shared = TRUE, crosshairs = TRUE)
#hc_exporting(enabled = TRUE) # Enable chart exporting (optional)
sect2
xaringan:::inf_mr()
